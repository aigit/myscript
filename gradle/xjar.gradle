plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'application'
    id 'groovy'
}


group = 'com.taike.cms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8


repositories {
    flatDir { dirs 'lib' }
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    mavenLocal()
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'http://nexus20190404.pdnews.cn/repository/common-service-jar/'
        credentials {
            username 'admin'
            password 'I9WEhAiikguaq9FT'
        }
    }
    maven { url "http://mvn.gt.igexin.com/nexus/content/repositories/releases/" }
    mavenCentral()
}

configurations {
    providedRuntime
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.228'
    }
}
dependencies {
    compile project(':taike-core')

    implementation files('lib/push-0.0.1-SNAPSHOT.jar')
    implementation files('lib/image-processor-springboot-starter-1.0.jar')
    implementation files('lib/xjar-4.0.2.jar')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-tomcat')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    //测
    compile('org.springframework.boot:spring-boot-starter-freemarker')
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'
    compile group: 'org.apache.shiro', name: 'shiro-spring', version: '1.4.0'

    compile group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '2.6.0'
    compile group: 'com.baomidou', name: 'mybatisplus-spring-boot-starter', version: '1.0.5'
    compile group: 'com.baomidou', name: 'mybatis-plus', version: '2.3'
    compile group: 'org.apache.velocity', name: 'velocity-engine-core', version: '2.0'
    compile group: 'io.reactivex', name: 'rxjava', version: '1.3.8'

//    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.59'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.5'


    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.1'
    compile group: 'com.gexin.platform', name: 'gexin-rp-sdk-http', version: '4.1.0.0'

//    compile group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: '6.7.0'
//    compile group: 'org.elasticsearch', name: 'elasticsearch', version: '6.7.0'

    compile group: 'org.jsoup', name: 'jsoup', version: '1.8.3'

//    compile 'com.common.spm:aliyun-spm:1.2.7@jar'
    compile group: 'net.bramp.ffmpeg', name: 'ffmpeg', version: '0.6.2'

    compile 'cn.hutool:hutool-all:5.6.3'
    compile group: 'com.belerweb', name: 'pinyin4j', version: '2.5.1'


    //京东云直播
    // https://mvnrepository.com/artifact/com.jdcloud.sdk/core
    compile group: 'com.jdcloud.sdk', name: 'core', version: '1.2.0'
    // https://mvnrepository.com/artifact/com.jdcloud.sdk/live
    compile group: 'com.jdcloud.sdk', name: 'live', version: '1.0.17'

    //京东云OSS
    compile 'com.amazonaws:aws-java-sdk-s3'

    //chatroom 需要的
    //chatroom 需要的
//    implementation("com.common.im:github-wildfire:1.2.3")
//
//    compile 'cn.wildfirechat:common:0.25'
//    compile 'cn.wildfirechat:sdk:0.25'

    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.10.0'

    // google缩略图 https://mvnrepository.com/artifact/net.coobird/thumbnailator
    compile group: 'net.coobird', name: 'thumbnailator', version: '0.4.8'

    compile group: 'com.google.zxing', name: 'javase', version: '3.4.0'

    compile 'com.google.guava:guava:19.0'

    compile group: 'org.apache.commons', name: 'commons-compress', version: '1.18'

    // 极光推送
    implementation group: 'cn.jpush.api', name: 'jpush-client', version: '3.4.8'
    compile fileTree(dir: 'lib', includes: ['*.jar'])

    testCompile('org.springframework.boot:spring-boot-starter-test')

    annotationProcessor 'org.projectlombok:lombok:1.18.6'
    compileOnly 'org.projectlombok:lombok:1.18.6'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.6'
    testCompileOnly 'org.projectlombok:lombok:1.18.6'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-pool2
    implementation group: 'org.apache.commons', name: 'commons-pool2', version: '2.5.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-compress
    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.19'

    // https://mvnrepository.com/artifact/com.github.core-lib/loadkit
    implementation group: 'com.github.core-lib', name: 'loadkit', version: 'v1.0.1'

}


def createDir = {
    path->
        File dir=new File(path);
        if (!dir.exists()){
            dir.mkdirs();
        }
}
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}
println(sourceSets.main.resources.srcDirs)
task copyMethod {
    doLast {
        println 'copyMethod...'
        copy {
            from 'build/libs/'
            into 'build/myencryped/'
            include '*.go'
        }
        copy {
            from 'build/libs/'
            into 'build/myencryped/resources/'
            include 'encrypted.jar'
        }
        copy {
            println(sourceSets.main.resources.srcDir("goEncrySrc"))
            from 'src/main/resources/goEncrySrc'
            into 'build/myencryped/'
            include 'go.*'
        }


    }

}

task makeJavaDir(dependsOn: bootJar){
    //定义一个数组，数组里的是目录路径
    doFirst {
        println "开始创建文件夹"
        def paths = ['build/myencryped/resources'];
        //doFirst在task之前执行
        //遍历数组，调用createDir闭包，创建目录
        paths.forEach(createDir);
    }

    finalizedBy(copyMethod)
}





task mix(dependsOn: 'classes',type: JavaExec) {
    main = 'com.taike.cms.MakeEncryJar'
    classpath = sourceSets.main.runtimeClasspath
    args 'taike-cms-0.0.1-SNAPSHOT'
    run
    finalizedBy(makeJavaDir)
}
bootJar{
    finalizedBy(mix)
}


